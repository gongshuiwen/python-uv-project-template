[project]
name = "python-uv-project-template"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = []

[dependency-groups]
dev = [
    { include-group = "lint" },
    { include-group = "type" },
    { include-group = "test" },
]
type = ["basedpyright"]
lint = ["ruff"]
test = [
    "pytest",
    "pytest-cov",
    "pytest-mock",
    # "hypothesis",
    # "freezegun",
]

# =================================================
# Uv: https://docs.astral.sh/uv/reference/settings/
# =================================================
[tool.uv]
# package = false # Default value: true

# [[tool.uv.index]]
# name = "mirrors"
# url = "https://mirrors.tencent.com/pypi/simple"
# default = true

# ===========================================
# Ruff: https://docs.astral.sh/ruff/settings/
# ===========================================
[tool.ruff.lint.isort]
known-first-party = ["src"]

# ==================================================================
# Pytest: https://docs.pytest.org/en/stable/reference/customize.html
# ==================================================================
[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["test"]
addopts = [ # See: https://docs.pytest.org/en/stable/reference/reference.html#command-line-flags
    "-ra",
    "--strict-markers",
    "--strict-config",

    # See: https://pytest-cov.readthedocs.io/en/latest/reporting.html
    "--cov",
    "--cov-report=term-missing"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# ===============================================================
# Coverage: https://coverage.readthedocs.io/en/latest/config.html
# ===============================================================
[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    'if settings.DEBUG',

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",

    # Others:
    'class .*\bProtocol\):',
]

# ============================================
# Bandit
# ============================================
# [tool.bandit]
# exclude_dirs = ["test", "htmlcov", ".venv"]
# skips = ["B101", "B601"]

# [tool.bandit.assert_used]
# skips = ["*_test.py", "*/test_*.py"]
